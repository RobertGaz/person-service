apiVersion: v1
kind: ConfigMap
metadata:
  name: person-service-configmap
  namespace: {{ .Values.namespace_name }}
data:
  db_url: person-db-service:3306
  aws_region: {{ .Values.aws.region }}

---

apiVersion: v1
kind: Secret
metadata:
  name: person-service-secret
  namespace: {{ .Values.namespace_name }}
type: Opaque
data:
  aws_access_key_id: {{ .Values.aws.access_key_id | b64enc }}
  aws_secret_access_key: {{ .Values.aws.secret_access_key | b64enc }}

---

apiVersion: v1
kind: Secret
metadata:
  name: registry-credentials
  namespace: {{ .Values.namespace_name }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ .Values.registry_credentials_json }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: person-service-deployment
  namespace: {{ .Values.namespace_name }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: person-service
  template:
    metadata:
      labels:
        app: person-service
    spec:
      containers:
        - name: person-service-container
          image: registry.gitlab.com/robertgaz/person-service:main
          imagePullPolicy: Always
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.spring_profile }}
            - name: DB_URL
              valueFrom:
                configMapKeyRef:
                  name: person-service-configmap
                  key: db_url
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: person-service-configmap
                  key: aws_region
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: person-service-secret
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: person-service-secret
                  key: aws_secret_access_key
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            failureThreshold: 4
            periodSeconds: 60
          livenessProbe:
           httpGet:
             path: /actuator/health
             port: 8080
           initialDelaySeconds: 15
           periodSeconds: 30
      imagePullSecrets:
        - name: registry-credentials


---

apiVersion: v1
kind: Service
metadata:
  name: person-service
  namespace: {{ .Values.namespace_name }}
spec:
  selector:
    app: person-service
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080